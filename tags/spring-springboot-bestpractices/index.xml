<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring, SpringBoot, BestPractices on SivaLabs</title>
    <link>https://sivalabs.github.io/tags/spring-springboot-bestpractices/</link>
    <description>Recent content in Spring, SpringBoot, BestPractices on SivaLabs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 May 2019 07:59:17 +0530</lastBuildDate>
    
	<atom:link href="https://sivalabs.github.io/tags/spring-springboot-bestpractices/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SpringBoot Best Practices</title>
      <link>https://sivalabs.github.io/2019/05/spring-boot-best-practices/</link>
      <pubDate>Tue, 14 May 2019 07:59:17 +0530</pubDate>
      
      <guid>https://sivalabs.github.io/2019/05/spring-boot-best-practices/</guid>
      <description>I have been working with SpringBoot for many years and over the time I worked with many SpringBoot based codebases. There are few common mistakes that I observe in the projects that use SpringBoot. So, I thought of writing down few good practices that can be followed while using SpringBoot.
1. Understand SpringBoot Core Concepts I know, this sounds very obvious but I see many developers jumping onto using SpringBoot without having any prior knowledge on Spring, Dependency Injection.</description>
    </item>
    
  </channel>
</rss>