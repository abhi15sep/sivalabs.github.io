<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaEE on SivaLabs</title>
    <link>https://sivalabs.github.io/categories/javaee/</link>
    <description>Recent content in JavaEE on SivaLabs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Jun 2015 13:04:00 +0000</lastBuildDate>
    
	<atom:link href="https://sivalabs.github.io/categories/javaee/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Developers Perspective on Spring vs JavaEE</title>
      <link>https://sivalabs.github.io/2015/06/a-developers-perspective-on-spring-vs-javaee/</link>
      <pubDate>Mon, 15 Jun 2015 13:04:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2015/06/a-developers-perspective-on-spring-vs-javaee/</guid>
      <description>In Java community Spring vs JavaEE is a never ending debate. In such debates people form two groups consisting of evangelists, architects and hard core fans of one platform and debate endlessly. Those who participate in the debates may be architects who are responsible for platform selection. But what would developers think about this Spring vs JavaEE debate?
I am a Java developer who uses both Spring and JavaEE and I am not part of Spring or JavaEE fan club.</description>
    </item>
    
    <item>
      <title>When to use RequestDispatcher.forward() and response.sendRedirect()?</title>
      <link>https://sivalabs.github.io/2011/08/when-to-use-requestdispatcherforward/</link>
      <pubDate>Thu, 25 Aug 2011 00:35:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2011/08/when-to-use-requestdispatcherforward/</guid>
      <description>Many people know about how RequestDispatcher.forward() and response.sendRedirect() works.
RequestDispatcher.forward() is generally called Server side redirection and is used to forward to a resource within the same application. That resource could be a JSP or another Servlet.
response.sendRedirect() is generally called as Client side redirection as it issues a new request from the browser. This method is used to redirect to another resource within the same application or to the resource in some other application running in the same web container or can redirect to any other resource running in someother web container.</description>
    </item>
    
  </channel>
</rss>